"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/LivePreview.tsx":
/*!****************************************!*\
  !*** ./src/components/LivePreview.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/debounce */ \"(app-pages-browser)/./node_modules/lodash/debounce.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst LivePreview = (param)=>{\n    let { pages, currentPage, onPageChange, onFileUpload } = param;\n    _s();\n    const [localPage, setLocalPage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(currentPage);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isDragOver, setIsDragOver] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [lastValidHTML, setLastValidHTML] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const iframeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const dropZoneRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Gestion des images\n    const handleImageUpload = ()=>{\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = 'image/*';\n        input.multiple = true;\n        input.onchange = async (event)=>{\n            const files = event.target.files;\n            if (!files || files.length === 0) return;\n            try {\n                const formData = new FormData();\n                Array.from(files).forEach((file)=>formData.append('images', file));\n                const response = await fetch('http://localhost:5000/api/add-image', {\n                    method: 'POST',\n                    body: formData\n                });\n                if (!response.ok) {\n                    throw new Error('Erreur lors du téléchargement des images');\n                }\n                const data = await response.json();\n                const newHTML = document.documentElement.outerHTML;\n                window.parent.postMessage({\n                    type: 'update-html',\n                    html: newHTML\n                }, '*');\n            } catch (error) {\n                console.error('Erreur:', error);\n                alert('Erreur lors du téléchargement des images');\n            }\n        };\n        input.click();\n    };\n    // Clean HTML code\n    const cleanCode = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LivePreview.useCallback[cleanCode]\": (htmlCode, pageName)=>{\n            try {\n                let cleaned = htmlCode.replace(/^[\\s\\S]*?(<!DOCTYPE html[\\s\\S]*?<\\/html>)/i, '$1').replace(/```html\\n|```/g, '').replace(/<!--[\\s\\S]*?-->/g, '').trim();\n                if (!cleaned) throw new Error('HTML content is empty after cleaning');\n                if (!cleaned.startsWith('<!DOCTYPE html>')) cleaned = '<!DOCTYPE html>\\n' + cleaned;\n                if (!cleaned.includes('<html')) cleaned = '<!DOCTYPE html>\\n<html lang=\"en\">\\n' + cleaned + '\\n</html>';\n                if (!cleaned.includes('<head>')) {\n                    cleaned = cleaned.replace('<html', '<html lang=\"en\">\\n<head>\\n<meta charset=\"UTF-8\">\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n</head>\\n');\n                }\n                if (!cleaned.includes('<body>')) {\n                    cleaned = cleaned.replace('</head>', '</head>\\n<body>\\n') + '\\n</body>';\n                }\n                if (!cleaned.endsWith('</html>')) cleaned = cleaned + '\\n</html>';\n                return cleaned;\n            } catch (err) {\n                console.error('Error in cleanCode:', err);\n                return lastValidHTML || '\\n        <!DOCTYPE html>\\n        <html lang=\"en\">\\n          <head>\\n            <meta charset=\"UTF-8\">\\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n          </head>\\n          <body>\\n            <h1>Erreur : Contenu HTML invalide</h1>\\n          </body>\\n        </html>\\n      ';\n            }\n        }\n    }[\"LivePreview.useCallback[cleanCode]\"], [\n        currentPage,\n        lastValidHTML\n    ]);\n    // Inject drag-and-drop, text editing, and control frame script\n    const injectDragDropScript = ()=>\"\\n    <script>\\n      document.addEventListener('DOMContentLoaded', () => {\\n        const editableElements = document.querySelectorAll('p, h1, h2, h3, h4, h5, h6, span, div, section, article, aside, figure, img, button');\\n        let elementCounter = editableElements.length;\\n\\n        editableElements.forEach((el, index) => {\\n          const isGoogleMapSection = el.tagName === 'SECTION' && el.querySelector('#map');\\n          if ((el.textContent && el.textContent.trim()) || el.tagName === 'IMG' || el.tagName === 'BUTTON' || isGoogleMapSection) {\\n            el.setAttribute('draggable', 'true');\\n            el.setAttribute('data-drag-id', 'drag-' + index);\\n            el.style.position = 'relative';\\n            el.style.cursor = 'move';\\n            el.style.display = isGoogleMapSection ? 'block' : (el.tagName === 'IMG' ? 'inline-block' : el.style.display || 'block');\\n            if (isGoogleMapSection) {\\n              const mapDiv = el.querySelector('#map');\\n              if (mapDiv) {\\n                mapDiv.style.width = mapDiv.style.width || '100%';\\n                mapDiv.style.height = mapDiv.style.height || '400px';\\n              }\\n            }\\n\\n            // Add click handler to show selection frame and toolbar\\n            el.addEventListener('click', (e) => {\\n              e.preventDefault();\\n              e.stopPropagation();\\n\\n              // Remove existing frame and toolbar\\n              const existingFrame = document.querySelector('.selection-frame');\\n              if (existingFrame) existingFrame.remove();\\n              const existingToolbar = document.querySelector('.control-toolbar');\\n              if (existingToolbar) existingToolbar.remove();\\n\\n              // Create selection frame\\n              const rect = el.getBoundingClientRect();\\n              const frame = document.createElement('div');\\n              frame.className = 'selection-frame';\\n              frame.style.position = 'absolute';\\n              frame.style.top = (rect.top - 2 + window.scrollY) + 'px';\\n              frame.style.left = (rect.left - 2 + window.scrollX) + 'px';\\n              frame.style.width = (rect.width + 4) + 'px';\\n              frame.style.height = (rect.height + 4) + 'px';\\n              frame.style.border = '2px solid #007bff';\\n              frame.style.zIndex = '999';\\n              frame.setAttribute('data-target-id', 'drag-' + index);\\n              document.body.appendChild(frame);\\n\\n              // Create toolbar\\n              const toolbar = document.createElement('div');\\n              toolbar.className = 'control-toolbar';\\n              toolbar.style.position = 'absolute';\\n              toolbar.style.top = (rect.top - 40 + window.scrollY) + 'px';\\n              toolbar.style.left = (rect.left + rect.width / 2 - 100 + window.scrollX) + 'px';\\n              toolbar.style.background = '#fff';\\n              toolbar.style.border = '1px solid #ddd';\\n              toolbar.style.borderRadius = '8px';\\n              toolbar.style.padding = '4px';\\n              toolbar.style.boxShadow = '0 2px 5px rgba(0,0,0,0.1)';\\n              toolbar.style.zIndex = '1000';\\n              toolbar.style.display = 'flex';\\n              toolbar.style.gap = '4px';\\n\\n              const icons = [\\n                { title: 'Edit', icon: '✏️' },\\n                { title: 'Lock', icon: '\\uD83D\\uDD12' },\\n                { title: 'Duplicate', icon: '\\uD83D\\uDCCB' },\\n                { title: 'Delete', icon: '\\uD83D\\uDDD1️' },\\n                { title: 'More', icon: '⋯' },\\n                { title: 'Add Image', icon: '\\uD83D\\uDDBC️' }\\n              ].map(item => {\\n                const btn = document.createElement('button');\\n                btn.innerHTML = item.icon;\\n                btn.title = item.title;\\n                btn.style.border = 'none';\\n                btn.style.background = 'none';\\n                btn.style.cursor = 'pointer';\\n                btn.style.fontSize = '16px';\\n                btn.style.padding = '4px';\\n                btn.addEventListener('click', (e) => {\\n                  e.stopPropagation();\\n                  if (item.title === 'Delete') {\\n                    el.remove();\\n                    frame.remove();\\n                    toolbar.remove();\\n                  } else if (item.title === 'Duplicate') {\\n                    const clone = el.cloneNode(true);\\n                    elementCounter++;\\n                    clone.setAttribute('data-drag-id', 'drag-' + elementCounter);\\n                    el.parentNode.insertBefore(clone, el.nextSibling);\\n                    frame.remove();\\n                    toolbar.remove();\\n                  } else if (item.title === 'Add Image') {\\n                    window.parent.postMessage({ type: 'upload-image' }, '*');\\n                  }\\n                  const newHTML = document.documentElement.outerHTML;\\n                  window.parent.postMessage({ type: 'update-html', html: newHTML }, '*');\\n                });\\n                return btn;\\n              });\\n\\n              icons.forEach(btn => toolbar.appendChild(btn));\\n              document.body.appendChild(toolbar);\\n\\n              // Hide frame and toolbar when clicking outside\\n              document.addEventListener('click', function hideFrame(e) {\\n                if (!frame.contains(e.target) && !el.contains(e.target) && !toolbar.contains(e.target)) {\\n                  frame.remove();\\n                  toolbar.remove();\\n                  document.removeEventListener('click', hideFrame);\\n                }\\n              }, { once: true });\\n            });\\n          }\\n        });\\n\\n        let draggedElement = null;\\n        let dropTarget = null;\\n        let isDragging = false;\\n        let isResizing = false;\\n        let resizeTarget = null;\\n        let startX, startY, startWidth, startHeight;\\n        let resizeEdge = '';\\n\\n        // Drag-and-drop functionality\\n        const handleDragStart = (e) => {\\n          const target = e.target.closest('[draggable=\\\"true\\\"]');\\n          if (target && !isResizing && ((target.textContent && target.textContent.trim()) || target.tagName === 'IMG' || target.tagName === 'BUTTON' || (target.tagName === 'SECTION' && target.querySelector('#map')))) {\\n            draggedElement = target;\\n            isDragging = true;\\n            target.classList.add('dragging');\\n            e.dataTransfer.effectAllowed = 'move';\\n            const existingFrame = document.querySelector('.selection-frame');\\n            if (existingFrame) existingFrame.remove();\\n            const existingToolbar = document.querySelector('.control-toolbar');\\n            if (existingToolbar) existingToolbar.remove();\\n          }\\n        };\\n\\n        const handleDragOver = (e) => {\\n          e.preventDefault();\\n          const target = e.target.closest('[draggable=\\\"true\\\"]');\\n          if (draggedElement && target !== draggedElement && ((target.textContent && target.textContent.trim()) || target.tagName === 'IMG' || target.tagName === 'BUTTON' || (target.tagName === 'SECTION' && target.querySelector('#map')))) {\\n            dropTarget = target;\\n            target.classList.add('drag-over');\\n          }\\n        };\\n\\n        const handleDragLeave = (e) => {\\n          const target = e.target.closest('[draggable=\\\"true\\\"]');\\n          if (target) {\\n            target.classList.remove('drag-over');\\n            dropTarget = null;\\n          }\\n        };\\n\\n        const handleDrop = (e) => {\\n          e.preventDefault();\\n          const target = dropTarget;\\n          if (draggedElement && target && draggedElement !== target && ((draggedElement.textContent && draggedElement.textContent.trim()) || draggedElement.tagName === 'IMG' || draggedElement.tagName === 'BUTTON' || (draggedElement.tagName === 'SECTION' && draggedElement.querySelector('#map')))) {\\n            const parent = target.parentElement;\\n            if (parent) {\\n              const isImageDrag = draggedElement.tagName === 'IMG';\\n              const isImageTarget = target.tagName === 'IMG';\\n              const isButtonDrag = draggedElement.tagName === 'BUTTON';\\n              const isButtonTarget = target.tagName === 'BUTTON';\\n              const isGoogleMapSectionDrag = draggedElement.tagName === 'SECTION' && draggedElement.querySelector('#map');\\n              const isGoogleMapSectionTarget = target.tagName === 'SECTION' && target.querySelector('#map');\\n\\n              if ((isImageDrag && isImageTarget) || (isButtonDrag && isButtonTarget) || (isGoogleMapSectionDrag && isGoogleMapSectionTarget)) {\\n                const tempHTML = draggedElement.innerHTML;\\n                const tempWidth = draggedElement.style.width;\\n                const tempHeight = draggedElement.style.height;\\n                draggedElement.innerHTML = target.innerHTML;\\n                draggedElement.style.width = target.style.width;\\n                draggedElement.style.height = target.style.height;\\n                target.innerHTML = tempHTML;\\n                target.style.width = tempWidth;\\n                target.style.height = tempHeight;\\n\\n                if (isGoogleMapSectionDrag || isGoogleMapSectionTarget) {\\n                  [draggedElement, target].forEach(section => {\\n                    const mapDiv = section.querySelector('#map');\\n                    if (mapDiv) {\\n                      const script = section.querySelector('script:not([src])');\\n                      if (script) eval(script.textContent);\\n                    }\\n                  });\\n                }\\n              } else {\\n                parent.insertBefore(draggedElement, target);\\n              }\\n              draggedElement.classList.remove('dragging');\\n              target.classList.remove('drag-over');\\n              draggedElement = null;\\n              dropTarget = null;\\n\\n              const newHTML = document.documentElement.outerHTML;\\n              window.parent.postMessage({ type: 'update-html', html: newHTML }, '*');\\n            }\\n          }\\n        };\\n\\n        const handleDragEnd = () => {\\n          if (draggedElement) {\\n            draggedElement.classList.remove('dragging');\\n            draggedElement = null;\\n          }\\n          if (dropTarget) {\\n            dropTarget.classList.remove('drag-over');\\n            dropTarget = null;\\n          }\\n          isDragging = false;\\n        };\\n\\n        // Attach drag-and-drop event listeners\\n        document.addEventListener('dragstart', handleDragStart);\\n        document.addEventListener('dragover', handleDragOver);\\n        document.addEventListener('dragleave', handleDragLeave);\\n        document.addEventListener('drop', handleDrop);\\n        document.addEventListener('dragend', handleDragEnd);\\n\\n        // Text editing for all text-containing elements\\n        const textElements = document.querySelectorAll('p, h1, h2, h3, h4, h5, h6, span, button');\\n        textElements.forEach(el => {\\n          if (el.textContent && el.textContent.trim()) {\\n            el.style.overflowWrap = el.style.overflowWrap || 'break-word';\\n            el.style.wordBreak = el.style.wordBreak || 'break-word';\\n            el.style.whiteSpace = el.style.whiteSpace || 'normal';\\n\\n            el.addEventListener('click', (e) => {\\n              if (el.classList.contains('editing')) return;\\n              el.classList.add('editing');\\n\\n              const computedStyle = window.getComputedStyle(el);\\n              const originalText = el.textContent;\\n\\n              const textarea = document.createElement('textarea');\\n              textarea.value = originalText;\\n\\n              textarea.style.width = computedStyle.width;\\n              textarea.style.maxWidth = computedStyle.maxWidth === 'none' ? computedStyle.width : computedStyle.maxWidth;\\n              textarea.style.height = 'auto';\\n              textarea.style.minHeight = computedStyle.height;\\n              textarea.style.maxHeight = computedStyle.maxHeight === 'none' ? 'none' : computedStyle.maxHeight;\\n              textarea.style.padding = computedStyle.padding;\\n              textarea.style.margin = computedStyle.margin;\\n              textarea.style.border = '1px solid #ccc';\\n              textarea.style.borderRadius = computedStyle.borderRadius;\\n              textarea.style.fontFamily = computedStyle.fontFamily;\\n              textarea.style.fontSize = computedStyle.fontSize;\\n              textarea.style.fontWeight = computedStyle.fontWeight;\\n              textarea.style.color = computedStyle.color;\\n              textarea.style.backgroundColor = computedStyle.backgroundColor;\\n              textarea.style.lineHeight = computedStyle.lineHeight;\\n              textarea.style.textAlign = computedStyle.textAlign;\\n              textarea.style.boxSizing = 'border-box';\\n              textarea.style.resize = 'vertical';\\n              textarea.style.overflowWrap = 'break-word';\\n              textarea.style.wordBreak = 'break-word';\\n              textarea.style.whiteSpace = 'normal';\\n              textarea.style.overflow = computedStyle.overflow === 'visible' ? 'auto' : computedStyle.overflow;\\n\\n              el.textContent = '';\\n              el.appendChild(textarea);\\n              textarea.focus();\\n\\n              textarea.style.height = 'auto';\\n              textarea.style.height = `${textarea.scrollHeight}px`;\\n\\n              textarea.addEventListener('input', () => {\\n                textarea.style.height = 'auto';\\n                textarea.style.height = `${textarea.scrollHeight}px`;\\n              });\\n\\n              textarea.addEventListener('blur', () => {\\n                const newText = textarea.value || originalText;\\n                while (el.firstChild) {\\n                  el.removeChild(el.firstChild);\\n                }\\n                el.textContent = newText;\\n                el.classList.remove('editing');\\n\\n                el.style.overflowWrap = 'break-word';\\n                el.style.wordBreak = 'break-word';\\n                el.style.whiteSpace = 'normal';\\n\\n                const newHTML = document.documentElement.outerHTML;\\n                window.parent.postMessage({ type: 'update-html', html: newHTML }, '*');\\n              });\\n\\n              textarea.addEventListener('keypress', (e) => {\\n                if (e.key === 'Enter' && !e.shiftKey) {\\n                  e.preventDefault();\\n                  textarea.blur();\\n                }\\n              });\\n            });\\n          }\\n        });\\n\\n        // Helper function to determine if the mouse is near an edge\\n        const isNearEdge = (el, clientX, clientY) => {\\n          const rect = el.getBoundingClientRect();\\n          const edgeThreshold = 10;\\n          const nearRight = Math.abs(clientX - rect.right) < edgeThreshold;\\n          const nearBottom = Math.abs(clientY - rect.bottom) < edgeThreshold;\\n          const nearLeft = Math.abs(clientX - rect.left) < edgeThreshold;\\n          const nearTop = Math.abs(clientY - rect.top) < edgeThreshold;\\n\\n          if (nearRight && nearBottom) return 'bottom-right';\\n          if (nearLeft && nearBottom) return 'bottom-left';\\n          if (nearRight && nearTop) return 'top-right';\\n          if (nearLeft && nearTop) return 'top-left';\\n          if (nearRight) return 'right';\\n          if (nearLeft) return 'left';\\n          if (nearBottom) return 'bottom';\\n          if (nearTop) return 'top';\\n          return '';\\n        };\\n\\n        // Edge-based resizing on the selection frame\\n        document.addEventListener('mousemove', (e) => {\\n          if (isResizing) return;\\n\\n          const frame = document.querySelector('.selection-frame');\\n          if (frame) {\\n            const edge = isNearEdge(frame, e.clientX, e.clientY);\\n            if (edge === 'bottom-right' || edge === 'top-left') {\\n              frame.style.cursor = 'se-resize';\\n            } else if (edge === 'bottom-left' || edge === 'top-right') {\\n              frame.style.cursor = 'sw-resize';\\n            } else if (edge === 'left' || edge === 'right') {\\n              frame.style.cursor = 'ew-resize';\\n            } else if (edge === 'top' || edge === 'bottom') {\\n              frame.style.cursor = 'ns-resize';\\n            } else {\\n              frame.style.cursor = 'default';\\n            }\\n          }\\n        });\\n\\n        document.addEventListener('mousedown', (e) => {\\n          const frame = document.querySelector('.selection-frame');\\n          const target = document.querySelector('[data-drag-id=\\\"' + (frame?.getAttribute('data-target-id') || '') + '\\\"]');\\n          if (frame && target) {\\n            const edge = isNearEdge(frame, e.clientX, e.clientY);\\n            if (edge) {\\n              isResizing = true;\\n              resizeTarget = target;\\n              resizeEdge = edge;\\n              startX = e.clientX;\\n              startY = e.clientY;\\n              startWidth = parseInt(getComputedStyle(target).width) || target.offsetWidth;\\n              startHeight = parseInt(getComputedStyle(target).height) || target.offsetHeight;\\n              e.preventDefault();\\n            }\\n          }\\n        });\\n\\n        document.addEventListener('mousemove', (e) => {\\n          if (!isResizing || !resizeTarget) return;\\n\\n          const dx = e.clientX - startX;\\n          const dy = e.clientY - startY;\\n          let newWidth = startWidth;\\n          let newHeight = startHeight;\\n\\n          if (resizeEdge.includes('right')) {\\n            newWidth = Math.max(50, startWidth + dx);\\n          } else if (resizeEdge.includes('left')) {\\n            newWidth = Math.max(50, startWidth - dx);\\n            resizeTarget.style.left = (parseInt(getComputedStyle(resizeTarget).left) || 0) + (startWidth - newWidth) + 'px';\\n          }\\n          if (resizeEdge.includes('bottom')) {\\n            newHeight = Math.max(50, startHeight + dy);\\n          } else if (resizeEdge.includes('top')) {\\n            newHeight = Math.max(50, startHeight - dy);\\n            resizeTarget.style.top = (parseInt(getComputedStyle(resizeTarget).top) || 0) + (startHeight - newHeight) + 'px';\\n          }\\n\\n          resizeTarget.style.width = `${newWidth}px`;\\n          resizeTarget.style.height = `${newHeight}px`;\\n\\n          const mapDiv = resizeTarget.querySelector('#map');\\n          if (mapDiv) {\\n            mapDiv.style.width = `${newWidth}px`;\\n            mapDiv.style.height = `${newHeight - 50}px`;\\n            if (typeof google !== 'undefined' && google.maps) {\\n              google.maps.event.trigger(mapDiv.__gmap__, 'resize');\\n            }\\n          }\\n\\n          // Update the frame size\\n          const frame = document.querySelector('.selection-frame');\\n          if (frame) {\\n            frame.style.width = (newWidth + 4) + 'px';\\n            frame.style.height = (newHeight + 4) + 'px';\\n            frame.style.left = (resizeTarget.getBoundingClientRect().left - 2 + window.scrollX) + 'px';\\n            frame.style.top = (resizeTarget.getBoundingClientRect().top - 2 + window.scrollY) + 'px';\\n          }\\n        });\\n\\n        document.addEventListener('mouseup', () => {\\n          if (isResizing) {\\n            isResizing = false;\\n            const newHTML = document.documentElement.outerHTML;\\n            window.parent.postMessage({ type: 'update-html', html: newHTML }, '*');\\n            resizeTarget.style.cursor = 'move';\\n            resizeTarget = null;\\n            resizeEdge = '';\\n          }\\n        });\\n      });\\n    </script>\\n    <style>\\n      .dragging {\\n        opacity: 0.5;\\n        transform: scale(1.2);\\n        transition: opacity 0.3s, transform 0.2s ease-in-out;\\n        border: 2px dashed #007bff;\\n      }\\n      .drag-over {\\n        background: #a5d6a7;\\n        border: 2px dashed #4caf50;\\n      }\\n      [draggable=\\\"true\\\"] {\\n        padding: 0.5rem;\\n        margin: 0.5rem;\\n        cursor: grab;\\n      }\\n      [draggable=\\\"true\\\"].dragging {\\n        cursor: grabbing;\\n      }\\n      .editing {\\n        border: 1px dashed #007bff;\\n        padding: 5px;\\n      }\\n      img, div, section, article, aside, figure, button {\\n        min-width: 50px;\\n        min-height: 50px;\\n      }\\n      section:has(#map) {\\n        border: 1px solid #ddd;\\n        border-radius: 8px;\\n        padding: 10px;\\n        box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\n      }\\n      .control-toolbar button:hover {\\n        background: #f0f0f0;\\n        border-radius: 4px;\\n      }\\n      .selection-frame {\\n        pointer-events: auto;\\n        box-sizing: border-box;\\n      }\\n    </style>\\n  \";\n    // Process HTML with navigation and drag-and-drop scripts\n    const processHTML = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LivePreview.useCallback[processHTML]\": (html, pageList)=>{\n            try {\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(html, 'text/html');\n                if (!doc.querySelector('script[data-navigation-handler]')) {\n                    const script = doc.createElement('script');\n                    script.setAttribute('data-navigation-handler', 'true');\n                    script.textContent = \"\\n          document.addEventListener('DOMContentLoaded', () => {\\n            document.querySelectorAll('a[href$=\\\".html\\\"]').forEach(link => {\\n              link.addEventListener('click', e => {\\n                e.preventDefault();\\n                const href = link.getAttribute('href');\\n                window.parent.postMessage({ type: 'navigation', href }, '*');\\n              });\\n            });\\n          });\\n        \";\n                    doc.body.appendChild(script);\n                }\n                if (!doc.querySelector('script[data-drag-drop-handler]')) {\n                    const dragDropScript = doc.createElement('script');\n                    dragDropScript.setAttribute('data-drag-drop-handler', 'true');\n                    dragDropScript.textContent = injectDragDropScript();\n                    doc.body.appendChild(dragDropScript);\n                }\n                const nav = doc.querySelector('nav');\n                if (nav && pageList.length > 0) {\n                    const theme = nav.getAttribute('data-theme') || 'digital';\n                    nav.outerHTML = getNavBar(pageList, currentPage, theme);\n                }\n                return '<!DOCTYPE html>' + doc.documentElement.outerHTML;\n            } catch (err) {\n                console.error('Error processing HTML:', err);\n                throw new Error('Invalid HTML content');\n            }\n        }\n    }[\"LivePreview.useCallback[processHTML]\"], [\n        currentPage\n    ]);\n    // Navigation bar generator\n    function getNavBar(pages, currentPage, theme) {\n        const colors = {\n            navBg: 'rgba(42, 42, 42, 0.8)',\n            navLink: '#e0e0e0',\n            navActive: '#bb86fc'\n        };\n        return '\\n      <nav style=\"position: sticky; top: 0; background: '.concat(colors.navBg, '; padding: 1rem 2rem; text-align: center; box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); z-index: 1000;\">\\n        ').concat(pages.map((page)=>{\n            const pageName = page.replace('.html', '');\n            const isActive = page === currentPage;\n            const activeStyle = isActive ? \"color: \".concat(colors.navActive, \"; border-bottom: 2px solid \").concat(colors.navActive, \";\") : '';\n            return '<a href=\"'.concat(page, '\" style=\"color: ').concat(colors.navLink, \"; text-decoration: none; margin: 0 1.5rem; font-weight: 600; \").concat(activeStyle, '\">').concat(pageName, \"</a>\");\n        }).join(''), \"\\n      </nav>\\n    \");\n    }\n    // Handle drag-and-drop events for file uploads\n    const handleDragOver = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LivePreview.useCallback[handleDragOver]\": (e)=>{\n            e.preventDefault();\n            e.stopPropagation();\n            setIsDragOver(true);\n        }\n    }[\"LivePreview.useCallback[handleDragOver]\"], []);\n    const handleDragLeave = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LivePreview.useCallback[handleDragLeave]\": (e)=>{\n            e.preventDefault();\n            e.stopPropagation();\n            setIsDragOver(false);\n        }\n    }[\"LivePreview.useCallback[handleDragLeave]\"], []);\n    const handleDrop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"LivePreview.useCallback[handleDrop]\": async (e)=>{\n            e.preventDefault();\n            e.stopPropagation();\n            setIsDragOver(false);\n            const files = e.dataTransfer.files;\n            if (files.length > 0) {\n                const file = files[0];\n                const reader = new FileReader();\n                reader.onload = ({\n                    \"LivePreview.useCallback[handleDrop]\": (event)=>{\n                        if (event.target && typeof event.target.result === 'string') {\n                            if (onFileUpload) onFileUpload(file, event.target.result);\n                        }\n                    }\n                })[\"LivePreview.useCallback[handleDrop]\"];\n                reader.readAsText(file);\n            }\n        }\n    }[\"LivePreview.useCallback[handleDrop]\"], [\n        onFileUpload\n    ]);\n    // Update iframe content with debouncing\n    const updateIframe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"LivePreview.useMemo[updateIframe]\": ()=>lodash_debounce__WEBPACK_IMPORTED_MODULE_2___default()({\n                \"LivePreview.useMemo[updateIframe]\": ()=>{\n                    const iframe = iframeRef.current;\n                    if (!iframe || !pages[currentPage]) {\n                        setError('Page not found or iframe unavailable');\n                        setIsLoading(false);\n                        if (iframe && lastValidHTML) iframe.srcdoc = lastValidHTML;\n                        return;\n                    }\n                    setIsLoading(true);\n                    setError(null);\n                    try {\n                        const cleanedHTML = cleanCode(pages[currentPage], currentPage);\n                        const pageList = Object.keys(pages);\n                        const processedHTML = processHTML(cleanedHTML + injectDragDropScript(), pageList);\n                        iframe.srcdoc = processedHTML;\n                        setLastValidHTML(processedHTML);\n                    } catch (err) {\n                        setError('Failed to load page content: ' + (err instanceof Error ? err.message : String(err)));\n                        setIsLoading(false);\n                        if (iframe && lastValidHTML) iframe.srcdoc = lastValidHTML;\n                    }\n                }\n            }[\"LivePreview.useMemo[updateIframe]\"], 300)\n    }[\"LivePreview.useMemo[updateIframe]\"], [\n        currentPage,\n        pages,\n        processHTML,\n        cleanCode,\n        lastValidHTML\n    ]);\n    // Handle iframe updates and messages\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"LivePreview.useEffect\": ()=>{\n            updateIframe();\n            const iframe = iframeRef.current;\n            if (!iframe) return;\n            const handleLoad = {\n                \"LivePreview.useEffect.handleLoad\": ()=>setIsLoading(false)\n            }[\"LivePreview.useEffect.handleLoad\"];\n            iframe.addEventListener('load', handleLoad);\n            const handleMessage = {\n                \"LivePreview.useEffect.handleMessage\": async (event)=>{\n                    var _event_data, _event_data1, _event_data2;\n                    if (event.origin !== 'http://localhost:3000') return; // Security check\n                    if (((_event_data = event.data) === null || _event_data === void 0 ? void 0 : _event_data.type) === 'navigation' && typeof event.data.href === 'string') {\n                        if (pages[event.data.href]) {\n                            setLocalPage(event.data.href);\n                            onPageChange === null || onPageChange === void 0 ? void 0 : onPageChange(event.data.href);\n                        } else {\n                            setError('Page \"'.concat(event.data.href, '\" not found'));\n                            const fallbackPage = Object.keys(pages).filter({\n                                \"LivePreview.useEffect.handleMessage\": (page)=>page.endsWith('.html')\n                            }[\"LivePreview.useEffect.handleMessage\"])[0] || '';\n                            setLocalPage(fallbackPage);\n                            onPageChange === null || onPageChange === void 0 ? void 0 : onPageChange(fallbackPage);\n                        }\n                    } else if (((_event_data1 = event.data) === null || _event_data1 === void 0 ? void 0 : _event_data1.type) === 'file-drop') {\n                        if (onFileUpload) {\n                            const fileContent = event.data.fileContent;\n                            const fileName = event.data.fileName;\n                            if (typeof fileContent === 'string' && typeof fileName === 'string') {\n                                const file = new File([\n                                    fileContent\n                                ], fileName, {\n                                    type: 'text/html'\n                                });\n                                onFileUpload(file, fileContent);\n                            }\n                        }\n                    } else if (((_event_data2 = event.data) === null || _event_data2 === void 0 ? void 0 : _event_data2.type) === 'update-html') {\n                        const newHTML = event.data.html;\n                        try {\n                            const response = await fetch('http://localhost:5000/api/save-page', {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                },\n                                body: JSON.stringify({\n                                    pagePath: currentPage,\n                                    code: newHTML\n                                })\n                            });\n                            if (!response.ok) {\n                                throw new Error(\"HTTP error! status: \".concat(response.status));\n                            }\n                            const result = await response.json();\n                            pages[currentPage] = newHTML; // Update local state\n                            updateIframe(); // Refresh iframe\n                        } catch (err) {\n                            setError(\"Failed to save updated HTML: \".concat(err instanceof Error ? err.message : String(err)));\n                        }\n                    }\n                }\n            }[\"LivePreview.useEffect.handleMessage\"];\n            window.addEventListener('message', handleMessage);\n            return ({\n                \"LivePreview.useEffect\": ()=>{\n                    iframe.removeEventListener('load', handleLoad);\n                    updateIframe.cancel();\n                    window.removeEventListener('message', handleMessage);\n                }\n            })[\"LivePreview.useEffect\"];\n        }\n    }[\"LivePreview.useEffect\"], [\n        currentPage,\n        pages,\n        updateIframe,\n        onFileUpload\n    ]);\n    // Validate initial page\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"LivePreview.useEffect\": ()=>{\n            if (!pages[currentPage]) {\n                setError('Page \"'.concat(currentPage, '\" not found'));\n                const firstPage = Object.keys(pages).filter({\n                    \"LivePreview.useEffect\": (page)=>page.endsWith('.html')\n                }[\"LivePreview.useEffect\"])[0] || '';\n                if (!localPage && firstPage) {\n                    setLocalPage(firstPage);\n                    onPageChange === null || onPageChange === void 0 ? void 0 : onPageChange(firstPage);\n                }\n            } else if (!localPage) {\n                setLocalPage(currentPage);\n            }\n        }\n    }[\"LivePreview.useEffect\"], [\n        currentPage,\n        pages\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: dropZoneRef,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        className: \"relative h-full w-full rounded-lg border border-gray-200 bg-white shadow-sm overflow-hidden transition-all duration-300 \".concat(isDragOver ? 'border-purple-500 border-4' : ''),\n        children: [\n            isDragOver && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-purple-500 bg-opacity-50 z-50 flex items-center justify-center\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-white text-2xl font-bold\",\n                    children: \"Drop your file here\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                    lineNumber: 768,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                lineNumber: 767,\n                columnNumber: 9\n            }, undefined),\n            isLoading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-white/80 z-10 transition-opacity duration-200\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-purple-600\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                    lineNumber: 773,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                lineNumber: 772,\n                columnNumber: 9\n            }, undefined),\n            error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 flex items-center justify-center bg-red-50 z-10 p-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-red-600 font-medium text-sm\",\n                    children: error\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                    lineNumber: 778,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                lineNumber: 777,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"iframe\", {\n                ref: iframeRef,\n                title: \"Live Preview\",\n                className: \"w-full h-full bg-white\",\n                sandbox: \"allow-scripts allow-same-origin allow-popups\",\n                onError: ()=>setError('Failed to load iframe content')\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n                lineNumber: 781,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Abir\\\\Desktop\\\\lasttrynchlh - Copy (8)\\\\deepsite\\\\frontend\\\\src\\\\components\\\\LivePreview.tsx\",\n        lineNumber: 759,\n        columnNumber: 5\n    }, undefined);\n};\n_s(LivePreview, \"K20nyLPwtUiJqcesPnOkE1Tcfbo=\");\n_c = LivePreview;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LivePreview);\nvar _c;\n$RefreshReg$(_c, \"LivePreview\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/LivePreview.tsx\n"));

/***/ })

});